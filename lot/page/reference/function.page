---
title: Function Reference
description: Jump to `engine\ignite.php`
type: Markdown
...

### Test

Dump a PHP code to show the results:

~~~ .php
// `__test__($a[, $b[, $c[, ...]]])`
__test__($foo, $bar, $baz);
~~~

### Format

Create regular expression pattern from a string contains some [wildcards](https://en.wikipedia.org/wiki/Wildcard_character "Wildcard Characters â€“ Wikipedia"):

~~~ .php
// `__format__($s, $x = '\n', $d = '#', $r = true)`
$pattern = __format__('lorem %s% ipsum %i% dolor # sit amet');
~~~

Parameter | Description
--------- | -----------
`$s` | The string input.
`$x` | Forbidden characters for the `%s%` wildcard.
`$d` | The regular expression delimiter to escape.
`$r` | Can the wildcard be replaced by an empty data?

Pattern | Description
------- | -----------
`%s%` | Accept any string but `$x`.
`%i%` | Accept any string numbers.
`%f%` | Accept any string numbers and floats.
`%*%` | Accept any string and `$x`.
`%[foo,bar,baz\,qux]%` | Accept `foo`, `bar` and `baz,qux`.
`%[foo,bar,%i%]%` | Accept `foo`, `bar` and any string numbers.

This function will return a regular expression string without the delimiters:

~~~ .php
$pattern = 'lorem ([^\n]+) ipsum (\d+) dolor \# sit amet';
~~~

### Array and Object

#### Convert Array to Object

~~~ .php
o([
    'a' => 'b',
    'c' => 'd',
    'e' => ['f', 'g', 'h', 'i'],
    'j' => [
        0 => 'k',
        1 => 'l',
        '2' => 'm'
    ],
    'n' => [
        0 => 'o',
        1 => 'p',
        'q' => 'r'
    ]
]);
~~~

Result:

~~~ .php
stdClass::__set_state([
    'a' => 'b',
    'c' => 'd',
    'e' => ['f', 'g', 'h', 'i'], // array with numeric keys will not be converted into object
    'j' => ['k', 'l', 'm'],
    'n' => stdClass::__set_state([
        0 => 'o',
        1 => 'p',
        'q' => 'r'
    ])
])
~~~

#### Convert Object to Array

~~~ .php
$test = new stdClass;
$test->a = 'b';
$test->c = new Date;
$test->d = (object) [
    'year' => 0,
    'month' => 0,
    'day' => 0
];

a($test);
~~~

Result:

~~~ .php
[
    'a' => 'b',
    'c' => Date::__set_state([ // class instance will not be converted into array
        'date' => '2016-12-25 23:11:16'
    ]),
    'd' => [
        'year' => 0,
        'month' => 0,
        'day' => 0
    ]
]
~~~